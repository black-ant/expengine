<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gang.etl.datacenter.mapper.SyncTypeMapper">

    <resultMap id="BaseResultMap" type="com.gang.etl.datacenter.entity.SyncType">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="type_class" jdbcType="VARCHAR" property="typeClass"/>
        <result column="type_policy" jdbcType="VARCHAR" property="typePolicy"/>
        <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
        <result column="supplier_id" jdbcType="VARCHAR" property="supplierId"/>
        <result column="supplier_name" jdbcType="VARCHAR" property="supplierName"/>
        <result column="data_type" jdbcType="VARCHAR" property="dataType"/>
    </resultMap>

    <sql id="selectParam">
         id, type_class, type_policy, type_name, supplier_id, supplier_name, data_type
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sync_type
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.gang.etl.datacenter.entity.SyncType">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sync_type (type_class, type_policy, type_name,
        supplier_id, supplier_name, data_type
        )
        values (#{typeClass,jdbcType=VARCHAR}, #{typePolicy,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR},
        #{supplierId,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.gang.etl.datacenter.entity.SyncType">
    update sync_type
    set type_class = #{typeClass,jdbcType=VARCHAR},
      type_policy = #{typePolicy,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, type_class, type_policy, type_name, supplier_id, supplier_name, data_type
    from sync_type
    where id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectByNameAndData" resultMap="BaseResultMap">
        select
        <include refid="selectParam"/>
        from sync_type
        <where>
            <trim suffixOverrides="AND">
                <if test="typeName != null">
                    type_name = #{typeName,jdbcType=VARCHAR} AND
                </if>
                <if test="dataType!=null">
                    data_type = #{dataType,jdbcType=VARCHAR} AND
                </if>
            </trim>
        </where>
    </select>


    <select id="selectAll" resultMap="BaseResultMap">
    select id, type_class, type_policy, type_name, supplier_id, supplier_name, data_type
    from sync_type
  </select>
</mapper>