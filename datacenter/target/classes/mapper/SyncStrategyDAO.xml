<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gang.etl.datacenter.mapper.SyncStrategyDAO">
  <resultMap id="BaseResultMap" type="com.gang.etl.datacenter.entity.SyncStrategy">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="strategy_type" jdbcType="VARCHAR" property="strategyType" />
    <result column="strategy_name" jdbcType="VARCHAR" property="strategyName" />
    <result column="frequency" jdbcType="VARCHAR" property="frequency" />
    <result column="retry_num" jdbcType="INTEGER" property="retryNum" />
    <result column="rules" jdbcType="VARCHAR" property="rules" />
    <result column="strategy_job" jdbcType="VARCHAR" property="strategyJob" />
  </resultMap>
  <sql id="Base_Column_List">
    id, strategy_type, strategy_name, frequency, retry_num, rules, strategy_job
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sync_strategy
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sync_strategy
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gang.etl.datacenter.entity.SyncStrategy">
    insert into sync_strategy (id, strategy_type, strategy_name, 
      frequency, retry_num, rules, 
      strategy_job)
    values (#{id,jdbcType=VARCHAR}, #{strategyType,jdbcType=VARCHAR}, #{strategyName,jdbcType=VARCHAR}, 
      #{frequency,jdbcType=VARCHAR}, #{retryNum,jdbcType=INTEGER}, #{rules,jdbcType=VARCHAR}, 
      #{strategyJob,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gang.etl.datacenter.entity.SyncStrategy">
    insert into sync_strategy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="strategyType != null">
        strategy_type,
      </if>
      <if test="strategyName != null">
        strategy_name,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="retryNum != null">
        retry_num,
      </if>
      <if test="rules != null">
        rules,
      </if>
      <if test="strategyJob != null">
        strategy_job,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="strategyType != null">
        #{strategyType,jdbcType=VARCHAR},
      </if>
      <if test="strategyName != null">
        #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="retryNum != null">
        #{retryNum,jdbcType=INTEGER},
      </if>
      <if test="rules != null">
        #{rules,jdbcType=VARCHAR},
      </if>
      <if test="strategyJob != null">
        #{strategyJob,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gang.etl.datacenter.entity.SyncStrategy">
    update sync_strategy
    <set>
      <if test="strategyType != null">
        strategy_type = #{strategyType,jdbcType=VARCHAR},
      </if>
      <if test="strategyName != null">
        strategy_name = #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="retryNum != null">
        retry_num = #{retryNum,jdbcType=INTEGER},
      </if>
      <if test="rules != null">
        rules = #{rules,jdbcType=VARCHAR},
      </if>
      <if test="strategyJob != null">
        strategy_job = #{strategyJob,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gang.etl.datacenter.entity.SyncStrategy">
    update sync_strategy
    set strategy_type = #{strategyType,jdbcType=VARCHAR},
      strategy_name = #{strategyName,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=VARCHAR},
      retry_num = #{retryNum,jdbcType=INTEGER},
      rules = #{rules,jdbcType=VARCHAR},
      strategy_job = #{strategyJob,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>